import { ObjectSchema } from "joi";
import { OpenApiSchema, Body, Servers, SecurityScheme, PathInput, TypedParameter, TypedObject, TypedArray, ReferencedObject } from "./openapi.types";
export declare class OpenApi {
    private schema;
    private operationIds;
    private declaredParameters;
    private declaredModels;
    private securitySchemeIds;
    constructor(version: string, title: string, description: string, email: string);
    setServers(servers: Servers): void;
    declareSecurityScheme(name: string, scheme: SecurityScheme): void;
    addGlobalSecurityScheme(name: string, scopes?: string[]): void;
    /**
     * this replaces path parameters from express to openapi format
     * @param apiPath
     */
    private replaceParameters;
    addPath(path: string, inputDefinition: PathInput, visible: boolean): void;
    private objectSchema;
    private arraySchema;
    private checkSecurityDefinition;
    private checkParameters;
    setLicense(name: string, url: string, termsOfService: string): void;
    private parametersAndBodyFromSchema;
    private checkAndSetModel;
    private genericParams;
    private declareParameter;
    checkAndSetSchema(key: string, schema: TypedObject | TypedArray | ReferencedObject): void;
    checkAndSetParameter(key: string, preparedParameter: TypedParameter): string;
    private isRequiredProperty;
    generateJson(): OpenApiSchema;
    private stringParameter;
    private referencedParameter;
    private numberParameter;
    private integerParameter;
    private booleanParameter;
    private arrayParameter;
    declareSchema(description: string, outerSchema: ObjectSchema): Body;
    private bodyParams;
}
//# sourceMappingURL=openapi.d.ts.map